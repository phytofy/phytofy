name: Automation Script - CLI & IoT

on: [push]

jobs:
  pipeline:
    name: Pipeline
    runs-on: ubuntu-20.04
    steps:
      - name: Initiating
        uses: actions/checkout@v1
      - name: Preparing
        uses: actions/setup-go@v1
        with:
          go-version: '1.16.x'
      - name: Linting
        run: |
          go get -u golang.org/x/lint/golint
          cd core
          $(which golint 2> /dev/null || echo /home/runner/go/bin/golint) -set_exit_status ./...
      - name: Tagging Version
        id: version
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: Building CLI
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GH_API_USER: ${{ github.actor }}
          GH_API_TOKEN: ${{ github.token }}
          RELEASE_VERSION: ${{ steps.version.outputs.tag }}
        run: |
          sed -i "s/0\.0\.0/${RELEASE_VERSION}/g" ui/package.json
          /bin/sh automation/build.cli.sh
          /bin/sh automation/publish.cli.sh
          mkdir release
          mv phytofy-cli.windows-amd64.exe release/phytofy-cli.windows-amd64.${RELEASE_VERSION}.exe
          mv phytofy-cli.linux-amd64 release/phytofy-cli.linux-amd64.${RELEASE_VERSION}
          mv phytofy-cli.linux-arm32v7 release/phytofy-cli.linux-arm32v7.${RELEASE_VERSION}
          mv phytofy-cli.macos-amd64 release/phytofy-cli.macos-amd64.${RELEASE_VERSION}
      - name: Uploading CLI Release
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GH_API_TOKEN: ${{ github.token }}
          RELEASE_VERSION: ${{ steps.version.outputs.tag }}
        run: |
          sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key C99B11DEB97541F0
          sudo apt-add-repository https://cli.github.com/packages
          sudo apt update
          sudo apt install gh
          echo ${{ github.token }} | gh auth login --hostname github.com --with-token
          echo ${RELEASE_VERSION} | gh release create ${RELEASE_VERSION}
          gh release upload ${RELEASE_VERSION} release/*
      - name: Issuing Repository Dispatch
        if: startsWith(github.ref, 'refs/tags/')
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ sercets.GH_API_TOKEN }}
          repository: ${{ github.repository }}
          event-type: electron-wrapping
          client-payload: '{"ref": "${{ github.ref }}", "release_version": "${{ steps.version.outputs.tag }}"}'
      - name: Building IoT
        if: startsWith(github.ref, 'refs/tags/')
        env:
          REGISTRY_USER: ${{ github.actor }}
          REGISTRY_TOKEN: ${{ github.token }}
          REGISTRY_HOST: ghcr.io
          REGISTRY_PREFIX: 'ghcr.io/${{ github.actor }}/phytofy:'
          VERSION_SEPARATOR: '-'
          GH_API_USER: ${{ github.actor }}
          GH_API_TOKEN: ${{ github.token }}
          RELEASE_VERSION: ${{ steps.version.outputs.tag }}
        run: |
          sed -i "s/0\.0\.0/${RELEASE_VERSION}/g" ui/package.json
          /bin/sh automation/build.iot.sh
          /bin/sh automation/publish.iot.sh
          rm /home/runner/.docker/config.json
